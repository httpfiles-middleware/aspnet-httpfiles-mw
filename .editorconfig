# NOTE: Requires **VS2019 16.3** or later

# StyleCop.Analyzers rules with default action
# Description: StyleCop.Analyzers with default action. Rules with IsEnabledByDefault = false are disabled.

# Code files
# --------------- Project files ---------------
[*.csproj]
# Indentation and spacing
indent_size = 2
indent_style = space
tab_width = 2

# ------------ Config/Json files --------------
[*.json]
# Indentation and spacing
indent_size = 2
indent_style = space
tab_width = 2

# --------------- Code files ---------------
[*.{cs,vb}]

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# file_header_template = "HttpFilesMW. All rights reserved. Copyright (c) {Year} {Author}"
file_header_template =-----------------------------------------------------------------------\n<copyright file="{fileName}" company="HttpFilesMW">\nCopyright Â© HttpFilesMW. All rights reserved.\n</copyright>\n-----------------------------------------------------------------------

# XML comment analysis disabled
dotnet_diagnostic.SA0001.severity = warning

# Invalid settings file
dotnet_diagnostic.SA0002.severity = warning

# Keywords should be spaced correctly
dotnet_diagnostic.SA1000.severity = warning

# Commas should be spaced correctly
dotnet_diagnostic.SA1001.severity = warning

# Semicolons should be spaced correctly
dotnet_diagnostic.SA1002.severity = warning

# Symbols should be spaced correctly
dotnet_diagnostic.SA1003.severity = warning

# Documentation lines should begin with single space
dotnet_diagnostic.SA1004.severity = warning

# Single line comments should begin with single space
dotnet_diagnostic.SA1005.severity = warning

# Preprocessor keywords should not be preceded by space
dotnet_diagnostic.SA1006.severity = warning

# Operator keyword should be followed by space
dotnet_diagnostic.SA1007.severity = warning

# Opening parenthesis should be spaced correctly
dotnet_diagnostic.SA1008.severity = warning

# Closing parenthesis should be spaced correctly
dotnet_diagnostic.SA1009.severity = warning

# Opening square brackets should be spaced correctly
dotnet_diagnostic.SA1010.severity = warning

# Closing square brackets should be spaced correctly
dotnet_diagnostic.SA1011.severity = warning

# Opening braces should be spaced correctly
dotnet_diagnostic.SA1012.severity = warning

# Closing braces should be spaced correctly
dotnet_diagnostic.SA1013.severity = warning

# Opening generic brackets should be spaced correctly
dotnet_diagnostic.SA1014.severity = warning

# Closing generic brackets should be spaced correctly
dotnet_diagnostic.SA1015.severity = warning

# Opening attribute brackets should be spaced correctly
dotnet_diagnostic.SA1016.severity = warning

# Closing attribute brackets should be spaced correctly
dotnet_diagnostic.SA1017.severity = warning

# Nullable type symbols should be spaced correctly
dotnet_diagnostic.SA1018.severity = warning

# Member access symbols should be spaced correctly
dotnet_diagnostic.SA1019.severity = warning

# Increment decrement symbols should be spaced correctly
dotnet_diagnostic.SA1020.severity = warning

# Negative signs should be spaced correctly
dotnet_diagnostic.SA1021.severity = warning

# Positive signs should be spaced correctly
dotnet_diagnostic.SA1022.severity = warning

# Dereference and access of symbols should be spaced correctly
dotnet_diagnostic.SA1023.severity = warning

# Colons should be spaced correctly
dotnet_diagnostic.SA1024.severity = warning

# Code should not contain multiple whitespace in a row
dotnet_diagnostic.SA1025.severity = warning

# Code should not contain space after new or stackalloc keyword in implicitly typed array allocation
dotnet_diagnostic.SA1026.severity = warning

# Use tabs correctly
dotnet_diagnostic.SA1027.severity = warning

# Code should not contain trailing whitespace
dotnet_diagnostic.SA1028.severity = warning

# Do not prefix calls with base unless local implementation exists
dotnet_diagnostic.SA1100.severity = warning

# Prefix local calls with this
dotnet_diagnostic.SA1101.severity = warning

# Query clause should follow previous clause
dotnet_diagnostic.SA1102.severity = warning

# Query clauses should be on separate lines or all on one line
dotnet_diagnostic.SA1103.severity = warning

# Query clause should begin on new line when previous clause spans multiple lines
dotnet_diagnostic.SA1104.severity = warning

# Query clauses spanning multiple lines should begin on own line
dotnet_diagnostic.SA1105.severity = warning

# Code should not contain empty statements
dotnet_diagnostic.SA1106.severity = warning

# Code should not contain multiple statements on one line
dotnet_diagnostic.SA1107.severity = warning

# Block statements should not contain embedded comments
dotnet_diagnostic.SA1108.severity = warning

# Block statements should not contain embedded regions
dotnet_diagnostic.SA1109.severity = none

# Opening parenthesis or bracket should be on declaration line
dotnet_diagnostic.SA1110.severity = warning

# Closing parenthesis should be on line of last parameter
dotnet_diagnostic.SA1111.severity = warning

# Closing parenthesis should be on line of opening parenthesis
dotnet_diagnostic.SA1112.severity = warning

# Comma should be on the same line as previous parameter
dotnet_diagnostic.SA1113.severity = warning

# Parameter list should follow declaration
dotnet_diagnostic.SA1114.severity = warning

# Parameter should follow comma
dotnet_diagnostic.SA1115.severity = warning

# Split parameters should start on line after declaration
dotnet_diagnostic.SA1116.severity = warning

# Parameters should be on same line or separate lines
dotnet_diagnostic.SA1117.severity = warning

# Static field names should begin with underscore
dotnet_diagnostic.SA1118.severity = warning

# Parameter should not span multiple lines
dotnet_diagnostic.SA1119.severity = warning

# Comments should contain text
dotnet_diagnostic.SA1120.severity = warning

# Use built-in type alias
dotnet_diagnostic.SA1121.severity = warning

# Use string.Empty for empty strings
dotnet_diagnostic.SA1122.severity = warning

# Do not place regions within elements
dotnet_diagnostic.SA1123.severity = warning

# Do not use regions
dotnet_diagnostic.SA1124.severity = warning

# Use shorthand for nullable types
dotnet_diagnostic.SA1125.severity = warning

# Prefix calls correctly
dotnet_diagnostic.SA1126.severity = warning

# Generic type constraints should be on their own line
dotnet_diagnostic.SA1127.severity = warning

# Put constructor initializers on their own line
dotnet_diagnostic.SA1128.severity = warning

# Do not use default value type constructor
dotnet_diagnostic.SA1129.severity = warning

# Use lambda syntax
dotnet_diagnostic.SA1130.severity = warning

# Use readable conditions
dotnet_diagnostic.SA1131.severity = warning

# Do not combine fields
dotnet_diagnostic.SA1132.severity = warning

# Do not combine attributes
dotnet_diagnostic.SA1133.severity = warning

# Attributes should not share line
dotnet_diagnostic.SA1134.severity = warning

# Using directives should be qualified
dotnet_diagnostic.SA1135.severity = warning

# Enum values should be on separate lines
dotnet_diagnostic.SA1136.severity = warning

# Elements should have the same indentation
dotnet_diagnostic.SA1137.severity = warning

# Use literals suffix notation instead of casting
dotnet_diagnostic.SA1139.severity = warning

# Using directives should be placed correctly
dotnet_diagnostic.SA1200.severity = warning

# Elements should appear in the correct order
dotnet_diagnostic.SA1201.severity = warning

# Elements should be ordered by access
dotnet_diagnostic.SA1202.severity = warning

# Constants should appear before fields
dotnet_diagnostic.SA1203.severity = warning

# Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = warning

# Partial elements should declare access
dotnet_diagnostic.SA1205.severity = warning

# Declaration keywords should follow order
dotnet_diagnostic.SA1206.severity = warning

# Protected should come before internal
dotnet_diagnostic.SA1207.severity = warning

# System using directives should be placed before other using directives
dotnet_diagnostic.SA1208.severity = warning

# Using alias directives should be placed after other using directives
dotnet_diagnostic.SA1209.severity = warning

# Using directives should be ordered alphabetically by namespace
dotnet_diagnostic.SA1210.severity = warning

# Using alias directives should be ordered alphabetically by alias name
dotnet_diagnostic.SA1211.severity = warning

# Property accessors should follow order
dotnet_diagnostic.SA1212.severity = warning

# Event accessors should follow order
dotnet_diagnostic.SA1213.severity = warning

# Readonly fields should appear before non-readonly fields
dotnet_diagnostic.SA1214.severity = warning

# Using static directives should be placed at the correct location
dotnet_diagnostic.SA1216.severity = warning

# Using static directives should be ordered alphabetically
dotnet_diagnostic.SA1217.severity = warning

# Element should begin with upper-case letter
dotnet_diagnostic.SA1300.severity = warning

# Element should begin with lower-case letter
dotnet_diagnostic.SA1301.severity = none

# Interface names should begin with I
dotnet_diagnostic.SA1302.severity = warning

# Const field names should begin with upper-case letter
dotnet_diagnostic.SA1303.severity = warning

# Non-private readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1304.severity = warning

# Field names should not use Hungarian notation
dotnet_diagnostic.SA1305.severity = none

# Field names should begin with lower-case letter
dotnet_diagnostic.SA1306.severity = warning

# Accessible fields should begin with upper-case letter
dotnet_diagnostic.SA1307.severity = warning

# Variable names should not be prefixed
dotnet_diagnostic.SA1308.severity = warning

# Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = warning

# Field names should not contain underscore
dotnet_diagnostic.SA1310.severity = warning

# Static readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1311.severity = warning

# Variable names should begin with lower-case letter
dotnet_diagnostic.SA1312.severity = warning

# Parameter names should begin with lower-case letter
dotnet_diagnostic.SA1313.severity = warning

# Statement should not use unnecessary parenthesis
dotnet_diagnostic.SA1314.severity = warning

# Access modifier should be declared
dotnet_diagnostic.SA1400.severity = warning

# Fields should be private
dotnet_diagnostic.SA1401.severity = warning

# File may only contain a single type
dotnet_diagnostic.SA1402.severity = warning

# File may only contain a single namespace
dotnet_diagnostic.SA1403.severity = warning

# Code analysis suppression should have justification
dotnet_diagnostic.SA1404.severity = warning

# Debug.Assert should provide message text
dotnet_diagnostic.SA1405.severity = warning

# Debug.Fail should provide message text
dotnet_diagnostic.SA1406.severity = warning

# Arithmetic expressions should declare precedence
dotnet_diagnostic.SA1407.severity = warning

# Conditional expressions should declare precedence
dotnet_diagnostic.SA1408.severity = warning

# Remove unnecessary code
dotnet_diagnostic.SA1409.severity = none

# Remove delegate parenthesis when possible
dotnet_diagnostic.SA1410.severity = warning

# Attribute constructor should not use unnecessary parenthesis
dotnet_diagnostic.SA1411.severity = warning

# Store files as UTF-8 with byte order mark
dotnet_diagnostic.SA1412.severity = none

# Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = warning

# Braces for multi-line statements should not share line
dotnet_diagnostic.SA1500.severity = warning

# Statement should not be on a single line
dotnet_diagnostic.SA1501.severity = warning

# Element should not be on a single line
dotnet_diagnostic.SA1502.severity = warning

# Braces should not be omitted
dotnet_diagnostic.SA1503.severity = warning

# All accessors should be single-line or multi-line
dotnet_diagnostic.SA1504.severity = warning

# Opening braces should not be followed by blank line
dotnet_diagnostic.SA1505.severity = warning

# Element documentation headers should not be followed by blank line
dotnet_diagnostic.SA1506.severity = warning

# Code should not contain multiple blank lines in a row
dotnet_diagnostic.SA1507.severity = warning

# Closing braces should not be preceded by blank line
dotnet_diagnostic.SA1508.severity = warning

# Opening braces should not be preceded by blank line
dotnet_diagnostic.SA1509.severity = warning

# Chained statement blocks should not be preceded by blank line
dotnet_diagnostic.SA1510.severity = warning

# While-do footer should not be preceded by blank line
dotnet_diagnostic.SA1511.severity = warning

# Single-line comments should not be followed by blank line
dotnet_diagnostic.SA1512.severity = warning

# Closing brace should be followed by blank line
dotnet_diagnostic.SA1513.severity = warning

# Element documentation header should be preceded by blank line
dotnet_diagnostic.SA1514.severity = warning

# Single-line comment should be preceded by blank line
dotnet_diagnostic.SA1515.severity = warning

# Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = warning

# Code should not contain blank lines at start of file
dotnet_diagnostic.SA1517.severity = warning

# Use line endings correctly at end of file
dotnet_diagnostic.SA1518.severity = none

# Braces should not be omitted from multi-line child statement
dotnet_diagnostic.SA1519.severity = warning

# Use braces consistently
dotnet_diagnostic.SA1520.severity = warning

# Elements should be documented
dotnet_diagnostic.SA1600.severity = warning

# Partial elements should be documented
dotnet_diagnostic.SA1601.severity = warning

# Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = warning

# Documentation should contain valid XML
dotnet_diagnostic.SA1603.severity = none

# Element documentation should have summary
dotnet_diagnostic.SA1604.severity = warning

# Partial element documentation should have summary
dotnet_diagnostic.SA1605.severity = warning

# Element documentation should have summary text
dotnet_diagnostic.SA1606.severity = warning

# Partial element documentation should have summary text
dotnet_diagnostic.SA1607.severity = warning

# Element documentation should not have default summary
dotnet_diagnostic.SA1608.severity = warning

# Property documentation should have value
dotnet_diagnostic.SA1609.severity = none

# Property documentation should have value text
dotnet_diagnostic.SA1610.severity = warning

# Element parameters should be documented
dotnet_diagnostic.SA1611.severity = warning

# Element parameter documentation should match element parameters
dotnet_diagnostic.SA1612.severity = warning

# Element parameter documentation should declare parameter name
dotnet_diagnostic.SA1613.severity = warning

# Element parameter documentation should have text
dotnet_diagnostic.SA1614.severity = warning

# Element return value should be documented
dotnet_diagnostic.SA1615.severity = warning

# Element return value documentation should have text
dotnet_diagnostic.SA1616.severity = warning

# Void return value should not be documented
dotnet_diagnostic.SA1617.severity = warning

# Generic type parameters should be documented
dotnet_diagnostic.SA1618.severity = warning

# Generic type parameters should be documented partial class
dotnet_diagnostic.SA1619.severity = warning

# Generic type parameter documentation should match type parameters
dotnet_diagnostic.SA1620.severity = warning

# Generic type parameter documentation should declare parameter name
dotnet_diagnostic.SA1621.severity = warning

# Generic type parameter documentation should have text
dotnet_diagnostic.SA1622.severity = warning

# Property summary documentation should match accessors
dotnet_diagnostic.SA1623.severity = warning

# Property summary documentation should omit accessor with restricted access
dotnet_diagnostic.SA1624.severity = warning

# Element documentation should not be copied and pasted
dotnet_diagnostic.SA1625.severity = warning

# Single-line comments should not use documentation style slashes
dotnet_diagnostic.SA1626.severity = warning

# Documentation text should not be empty
dotnet_diagnostic.SA1627.severity = warning

# Documentation text should begin with a capital letter
dotnet_diagnostic.SA1628.severity = none

# Documentation text should end with a period
dotnet_diagnostic.SA1629.severity = warning

# Documentation text should contain whitespace
dotnet_diagnostic.SA1630.severity = none

# Documentation should meet character percentage
dotnet_diagnostic.SA1631.severity = none

# Documentation text should meet minimum character length
dotnet_diagnostic.SA1632.severity = none

# File should have header
dotnet_diagnostic.SA1633.severity = warning

# File header should show copyright
dotnet_diagnostic.SA1634.severity = warning

# File header should have copyright text
dotnet_diagnostic.SA1635.severity = warning

# File header copyright text should match
dotnet_diagnostic.SA1636.severity = none # Rule doesn't work properly with file_header_template .editorconfig setting

# File header should contain file name
dotnet_diagnostic.SA1637.severity = warning

# File header file name documentation should match file name
dotnet_diagnostic.SA1638.severity = warning

# File header should have summary
dotnet_diagnostic.SA1639.severity = warning

# File header should have valid company text
dotnet_diagnostic.SA1640.severity = warning

# File header company name text should match
dotnet_diagnostic.SA1641.severity = warning

# Constructor summary documentation should begin with standard text
dotnet_diagnostic.SA1642.severity = warning

# Destructor summary documentation should begin with standard text
dotnet_diagnostic.SA1643.severity = warning

# Documentation headers should not contain blank lines
dotnet_diagnostic.SA1644.severity = none

# Included documentation file does not exist
dotnet_diagnostic.SA1645.severity = none

# Included documentation XPath does not exist
dotnet_diagnostic.SA1646.severity = none

# Include node does not contain valid file and path
dotnet_diagnostic.SA1647.severity = none

# Inheritdoc should be used with inheriting class
dotnet_diagnostic.SA1648.severity = warning

# File name should match first type name
dotnet_diagnostic.SA1649.severity = warning

# Element documentation should be spelled correctly
dotnet_diagnostic.SA1650.severity = none

# Do not use placeholder elements
dotnet_diagnostic.SA1651.severity = warning

# Do not prefix local members with this
dotnet_diagnostic.SX1101.severity = none

# Field names should begin with underscore
dotnet_diagnostic.SX1309.severity = none

# Static field names should begin with underscore
dotnet_diagnostic.SX1309S.severity = none

#### Code Analysis rules ####

# Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = warning

# Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = warning

# Do not expose generic lists
dotnet_diagnostic.CA1002.severity = warning

# Use generic event handler instances
dotnet_diagnostic.CA1003.severity = warning

# Enums should have zero value
dotnet_diagnostic.CA1008.severity = warning

# Declare event handlers correctly.
dotnet_diagnostic.CA1009.severity = warning

# Collections should implement generic interface
dotnet_diagnostic.CA1010.severity = warning

# Abstract types should not have constructors
dotnet_diagnostic.CA1012.severity = warning

# Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1014.severity = warning

# Mark assemblies with assembly version
dotnet_diagnostic.CA1016.severity = warning

# Mark assemblies with ComVisible
dotnet_diagnostic.CA1017.severity = warning

# Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = warning

# Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = warning

# Use properties where appropriate
dotnet_diagnostic.CA1024.severity = warning

# Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = warning

# Enum Storage should be Int32
dotnet_diagnostic.CA1028.severity = warning

# Use events where appropriate
dotnet_diagnostic.CA1030.severity = warning

# Do not catch general exception types
dotnet_diagnostic.CA1031.severity = warning

# Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = warning

# Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = warning

# Nested types should not be visible
dotnet_diagnostic.CA1034.severity = warning

# Override methods on comparable types
dotnet_diagnostic.CA1036.severity = warning

# Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = warning

# Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = warning

# Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1043.severity = warning

# Properties should not be write only
dotnet_diagnostic.CA1044.severity = warning

# Types that own native resources should be disposable.
dotnet_diagnostic.CA1049.severity = warning

# Declare types in namespaces
dotnet_diagnostic.CA1050.severity = warning

# Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = warning

# Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = warning

# Uri parameters should not be strings
dotnet_diagnostic.CA1054.severity = warning

# Uri return values should not be strings
dotnet_diagnostic.CA1055.severity = warning

# Uri properties should not be strings
dotnet_diagnostic.CA1056.severity = warning

# Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = warning

# Move pinvokes to native methods class
dotnet_diagnostic.CA1060.severity = warning

# Do not hide base class methods
dotnet_diagnostic.CA1061.severity = warning

# Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = warning

# Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = warning

# Exceptions should be public
dotnet_diagnostic.CA1064.severity = warning

# Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = warning

# Type {0} should implement IEquatable<T> because it overrides Equals
dotnet_diagnostic.CA1066.severity = warning

# Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1067.severity = warning

# CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = warning

# Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = warning

# Specify MessageBoxOptions
dotnet_diagnostic.CA1300.severity = warning

# Avoid duplicate accelerators
dotnet_diagnostic.CA1301.severity = warning

# Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = warning

# Specify CultureInfo
dotnet_diagnostic.CA1304.severity = warning

# Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = warning

# Set locale for data types
dotnet_diagnostic.CA1306.severity = warning

# Specify StringComparison
dotnet_diagnostic.CA1307.severity = warning

# Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = warning

# Use ordinal stringcomparison
dotnet_diagnostic.CA1309.severity = warning

# P/Invoke entry points should exist. Disable justification: This is a deprecated old FxCop rule.
dotnet_diagnostic.CA1400.severity = warning

# P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = warning

# AutoLayoutTypesShouldNotBeComVisible.
dotnet_diagnostic.CA1403.severity = warning

# CallGetLastErrorImmediatelyAfterPInvoke.
dotnet_diagnostic.CA1404.severity = warning

# ComVisibleTypeBaseTypesShouldBeComVisible.
dotnet_diagnostic.CA1405.severity = warning

# ComRegistrationMethodsShouldBeMatched.
dotnet_diagnostic.CA1410.severity = warning

# Mark boolean PInvoke arguments with MarshalAs
dotnet_diagnostic.CA1414.severity = warning

# DeclarePInvokesCorrectly.
dotnet_diagnostic.CA1415.severity = warning

# Variable names should not match field names
dotnet_diagnostic.CA1500.severity = warning

# Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = warning

# Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = warning

# Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = warning

# Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = warning

# Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = warning

# Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = warning

# Invalid entry in code metrics rule specification file
dotnet_diagnostic.CA1509.severity = warning

# Do not use timers that prevent power state changes
dotnet_diagnostic.CA1601.severity = warning

# Identifiers should be spelled correctly
dotnet_diagnostic.CA1704.severity = warning

# Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = warning

# Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = warning

# Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = warning

# Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = warning

# Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = warning

# Flags enums should have plural names
dotnet_diagnostic.CA1714.severity = warning

# Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = warning

# Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = warning

# Only FlagsAttribute enums should have plural names
dotnet_diagnostic.CA1717.severity = warning

# Identifier contains type name
dotnet_diagnostic.CA1720.severity = warning

# Property names should not match get methods
dotnet_diagnostic.CA1721.severity = warning

# Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = warning

# Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = warning

# Use preferred terms
dotnet_diagnostic.CA1726.severity = warning

# Review unused parameters
dotnet_diagnostic.CA1801.severity = warning

# Use literals where appropriate
dotnet_diagnostic.CA1802.severity = warning

# Do not ignore method results
dotnet_diagnostic.CA1806.severity = warning

# Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = warning

# Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = warning

# Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = warning

# Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = warning

# Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = warning

# Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = warning

# Properties should not return arrays
dotnet_diagnostic.CA1819.severity = warning

# Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = warning

# Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = warning

# Mark members as static
dotnet_diagnostic.CA1822.severity = warning

# Avoid unused private fields
dotnet_diagnostic.CA1823.severity = warning

# Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = warning

# Avoid zero-length array allocations.
dotnet_diagnostic.CA1825.severity = warning

# Do not use Enumerable methods on indexable collections. Instead use the collection directly
dotnet_diagnostic.CA1826.severity = warning

# Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning

# Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = warning

# Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning

# ValueTypeFieldsShouldBePortable. Disable: Old FxCop rule not yet ported.
dotnet_diagnostic.CA1900.severity = warning

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA1901.severity = none

# Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = warning

# Avoid calling problematic methods
dotnet_diagnostic.CA2001.severity = warning

# Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = warning

# Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = warning

# Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = warning

# Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = warning

# Always consume the value returned by methods marked with PreserveSigAttribute
dotnet_diagnostic.CA2010.severity = warning

# Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = warning

# Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = warning

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2108.severity = none

# Review visible event handlers
dotnet_diagnostic.CA2109.severity = warning

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2111.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2112.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2114.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2116.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2117.severity = none

# Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = warning

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2122.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2123.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2124.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2126.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2131.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2132.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2133.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2134.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2137.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2138.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2140.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2141.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2146.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2147.severity = none

# Disable: Deprecated FxCop rule.
dotnet_diagnostic.CA2149.severity = none

# Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = warning

# Rethrow to preserve stack details.
dotnet_diagnostic.CA2200.severity = warning

# Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = warning

# Disable: Deprecated FxCop Rule.
dotnet_diagnostic.CA2202.severity = none

# Use managed equivalents of win32 api
dotnet_diagnostic.CA2205.severity = warning

# Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = warning

# Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning

# Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = warning

# Do not mark serviced components with WebMethod
dotnet_diagnostic.CA2212.severity = warning

# Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = warning

# Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = warning

# Dispose Methods Should Call Base Class Dispose
dotnet_diagnostic.CA2215.severity = warning

# Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = warning

# Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = warning

# Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = warning

# Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = warning

# Disable: Deprecated FxCop Rule.
dotnet_diagnostic.CA2220.severity = none

# Override Equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = warning

# Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = warning

# Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = warning

# Collection properties should be read only
dotnet_diagnostic.CA2227.severity = warning

# Implement serialization constructors
dotnet_diagnostic.CA2229.severity = warning

# Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = warning

# Mark Windows Forms entry points with STAThread
dotnet_diagnostic.CA2232.severity = warning

# Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = warning

# Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = warning

# Call base class methods on ISerializable types
dotnet_diagnostic.CA2236.severity = warning

# Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = warning

# Implement serialization methods correctly
dotnet_diagnostic.CA2238.severity = warning

# Provide deserialization methods for optional fields
dotnet_diagnostic.CA2239.severity = warning

# Implement ISerializable correctly
dotnet_diagnostic.CA2240.severity = warning

# Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = warning

# Test for NaN correctly
dotnet_diagnostic.CA2242.severity = warning

# Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = warning

# Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = warning

# Do not assign a property to itself.
dotnet_diagnostic.CA2245.severity = warning

# Assigning symbol and its member in the same statement.
dotnet_diagnostic.CA2246.severity = warning

# Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = warning

# Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = warning

# Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = warning

# Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = warning

# Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = warning

# Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = warning

# Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = warning

# Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = warning

# Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = warning

# Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = warning

# Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = warning

# Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = warning

# Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = warning

# Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = warning

# Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = warning

# Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = warning

# Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = warning

# Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = warning

# Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = warning

# Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3005.severity = warning

# Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = warning

# Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = warning

# Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = warning

# Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = warning

# Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = warning

# Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = warning

# Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = warning

# Do Not Add Schema By URL
dotnet_diagnostic.CA3061.severity = warning

# Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = warning

# Insecure XSLT Script Execution
dotnet_diagnostic.CA3076.severity = warning

# Insecure Processing in API Design, XML Document and XML Text Reader
dotnet_diagnostic.CA3077.severity = warning

# Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA3147.severity = warning

# Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = warning

# Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = warning

# Do Not Use Unsafe Cipher Modes
dotnet_diagnostic.CA5358.severity = warning

# Do Not Disable Certificate Validation
dotnet_diagnostic.CA5359.severity = warning

# Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5360.severity = warning

# Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5361.severity = warning

# Do Not Refer Self In Serializable Class
dotnet_diagnostic.CA5362.severity = warning

# Do Not Disable Request Validation
dotnet_diagnostic.CA5363.severity = warning

# Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = warning

# Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = warning

# Use XmlReader For DataSet Read Xml
dotnet_diagnostic.CA5366.severity = warning

# Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = warning

# Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = warning

# Use XmlReader For Deserialize
dotnet_diagnostic.CA5369.severity = warning

# Use XmlReader For Validating Reader
dotnet_diagnostic.CA5370.severity = warning

# Use XmlReader For Schema Read
dotnet_diagnostic.CA5371.severity = warning

# Use XmlReader For XPathDocument
dotnet_diagnostic.CA5372.severity = warning

# Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = warning

# Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = warning

# Do Not Use Account Shared Access Signature
dotnet_diagnostic.CA5375.severity = warning

# Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = warning

# Use Container Level Access Policy
dotnet_diagnostic.CA5377.severity = warning

# Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = warning

# Do Not Use Weak Key Derivation Function Algorithm
dotnet_diagnostic.CA5379.severity = warning

# Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5380.severity = warning

# Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5381.severity = warning

# Use Secure Cookies In ASP.Net Core
dotnet_diagnostic.CA5382.severity = warning

# Ensure Use Secure Cookies In ASP.Net Core
dotnet_diagnostic.CA5383.severity = warning

# Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5384.severity = warning

# Use Rivestï¿½Shamirï¿½Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5385.severity = warning

# Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = warning

# Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.CA5387.severity = warning

# Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.CA5388.severity = warning

# Do Not Add Archive Item&apos;s Path To The Target File System Path
dotnet_diagnostic.CA5389.severity = warning

# Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = warning

# Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = warning

# Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = warning

# Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = warning

# Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = warning

# Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = warning

# Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = warning

# Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = warning

# Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = warning

# HttpClients should enable certificate revocation list checks
dotnet_diagnostic.CA5399.severity = warning

# Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = warning

# Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = warning

# Use CreateEncryptor with the default IV
dotnet_diagnostic.CA5402.severity = warning

# Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = warning

#### IDE rules ####

# Remove unnecessary using directives
dotnet_diagnostic.IDE0005.severity = warning

# Add readonly modifier
dotnet_diagnostic.IDE0044.severity = warning

#### CS rules ####

# Unnecessary using directives
dotnet_diagnostic.CS8019.severity = warning

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_style = space
indent_size = 4
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion

[*.cs]
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = file_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_prefer_system_threading_lock = true:suggestion
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent